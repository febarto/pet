// ---------- Prisma Client ----------
generator client {
  provider = "prisma-client-js"
}

// ---------- Banco de dados ----------
datasource db {
  provider = "sqlite"                 // Preview e Render Free
  url      = env("DATABASE_URL")      // ex.: file:./dev.db
}

// ---------- Modelos ----------
model Service {
  id              Int       @id @default(autoincrement())
  name            String    @unique          // usado no seed (upsert por nome)
  priceCents      Int
  durationMinutes Int
  active          Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  appointments    Appointment[]
}

model Pet {
  id          Int       @id @default(autoincrement())
  name        String
  breed       String
  ownerName   String
  phone       String
  photoUrl    String?
  color       String?
  weight      String?
  age         String?
  chip        String?
  birthDate   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  appointments Appointment[]
}

model Resource {
  id          Int       @id @default(autoincrement())
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  appointments Appointment[]
}

model Appointment {
  id          Int        @id @default(autoincrement())
  clientName  String
  phone       String
  startUTC    DateTime
  endUTC      DateTime
  dateLocal   String                 // YYYY-MM-DD
  notes       String?
  status      String     @default("CONFIRMED")  // PENDING | CONFIRMED | IN_SERVICE | DONE | CANCELED

  service     Service    @relation(fields: [serviceId], references: [id])
  serviceId   Int

  pet         Pet?       @relation(fields: [petId], references: [id])
  petId       Int?

  resource    Resource   @relation(fields: [resourceId], references: [id])
  resourceId  Int

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([resourceId, dateLocal, startUTC, endUTC])
}
