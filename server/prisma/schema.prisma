generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Service {
  id              Int      @id @default(autoincrement())
  name            String   @unique   // <- precisa ser Ãºnico para o upsert por name
  priceCents      Int
  durationMinutes Int
  active          Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  appointments Appointment[]
}


model Pet {
  id          Int      @id @default(autoincrement())
  name        String
  breed       String
  ownerName   String
  phone       String
  photoUrl    String?
  color       String?
  weight      String?
  age         String?
  chip        String?
  birthDate   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  appointments Appointment[]
}

model Resource {
  id          Int      @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  appointments Appointment[]
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  IN_SERVICE
  DONE
  CANCELED
}

model Appointment {
  id          Int                 @id @default(autoincrement())
  clientName  String
  phone       String
  startUTC    DateTime
  endUTC      DateTime
  dateLocal   String              // YYYY-MM-DD in America/Sao_Paulo for easy querying
  notes       String?
  status      AppointmentStatus   @default(CONFIRMED)

  service   Service  @relation(fields: [serviceId], references: [id])
  serviceId Int
  pet       Pet?     @relation(fields: [petId], references: [id])
  petId     Int?
  resource  Resource @relation(fields: [resourceId], references: [id])
  resourceId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

@@index([resourceId, dateLocal, startUTC, endUTC])
